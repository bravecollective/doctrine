namespace CoreServices
{
    using System;
    using System.Security.Cryptography;

    /// <summary>
    /// Represents a core application with its identifier and ECDSA keys. For use with core services.
    /// </summary>
    public interface ICoreApplication
    {
        /// <summary>
        /// The local private/public key pair for the application. The private key is used to sign requests to core.
        /// Core requires an exported copy of the public key from this pair to be able to validate the application requests.
        /// </summary>
        ECDsaCng LocalKey { get; }

        /// <summary>
        /// The application-specific public key generated by the core service. This is used to validate core responses that have been
        /// signed with an application-specific private key on the server-side.
        /// </summary>
        ECDsaCng ServiceKey { get; }

        /// <summary>
        /// The application identifier as provided by the core service.
        /// </summary>
        string Id { get; set; }

        /// <summary>
        /// Serialize the application configuration to store it for later use.
        /// </summary>
        /// <returns>Returns a serialized string containing the application id and keys.</returns>
        string Serialize();

        /// <summary>
        /// Export the public portion of the local application key pair. This should be submitted to core for the application.
        /// </summary>
        /// <returns>Returns a hex-encoded string containing the local application public key.</returns>
        string ExportPublicLocalKey();

        /// <summary>
        /// Import the application-specific public key generated by the core service.
        /// </summary>
        /// <param name="hexServiceKey">The application-specific public key encoded as hex.</param>
        void ImportPublicServiceKey(string hexServiceKey);
    }
}
