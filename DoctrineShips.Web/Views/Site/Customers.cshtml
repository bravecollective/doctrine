@using DoctrineShips.Web.ViewModels
@using DoctrineShips.Entities
@using GridMvc.Html

@model SiteCustomersViewModel

@{
    ViewBag.Title = "Site Customers";
}

<div class="ds-dialog" id="deletecustomers" tabindex="-1" role="dialog">
    <div class="ds-dialog-wrap">
        <div class="ds-dialog-content">
            <div class="ds-dialog-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4>Confirm Delete</h4>
            </div>
            <div class="ds-dialog-body">
                <p>Are you sure you want to delete the selected customers?</p>
            </div>
            <div class="ds-dialog-footer">
                <button type="button" id="deletecustomers_confirm" data-dismiss="modal">Confirm</button>
                <button type="button" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="ds-main" role="main">
    <div id="ds-header">
        <h1>
            Site Customers<br />
            <small>Manage customers for the site.</small>
        </h1>
        <div class="ds-header-detail">
            <p>Modifications may not be seen immediately as pages are cached for performance.</p>
        </div>
    </div>

    @if (ViewBag.Status != null)
    {
        <div id="ds-message">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <b>Status: </b>@Html.Raw(@ViewBag.Status)
        </div>
    }

    @if (Model != null && Model.Customers != null && Model.Customers.Count() != 0)
    {
        <div id="ds-grid">
            <div class="ds-grid-header">
                <h5><strong>Customers:</strong> @Model.Customers.Count()</h5>
            </div>

            @using (Html.BeginForm("DeleteCustomer", "Site", FormMethod.Post, new { @id = "deletecustomers_form" }))
            {
                @Html.AntiForgeryToken()

                @Html.Grid(Model.Customers).Columns(columns =>
                        {
                            columns.Add(c => c.CustomerId).Encoded(false).Sanitized(false).Titled("Id").RenderValueAs(c => @<a href='@Url.Action("CustomerContracts", "Search", new { customerId = @c.CustomerId }, Request.Url.Scheme)'>@c.CustomerId</a>).Filterable(true).Sortable(true);
                            columns.Add(c => c.Name).Titled("Name").Filterable(true).Sortable(true);
                            columns.Add(c => c.IsCorp).Titled("Corp/Alliance?").RenderValueAs(c => c.IsCorp == true ? "Yes" : "No").Filterable(true).Sortable(true);
                            columns.Add().Encoded(false).Sanitized(false).Titled("<div class=\"ds-grid-tools\"><button type=\"button\" onclick=\"confirmDialog('deletecustomers')\"><span class=\"glyphicon glyphicon-trash\"></span> Delete</button></div>").RenderValueAs(c => @<input type="checkbox" id="@c.CustomerId" name="RemoveList" value="@c.CustomerId" />);
                        }).WithPaging(10, 5).WithMultipleFilters()
            }

        </div>
    }
    else
    {
        <div id="ds-message">
            <b>No Customers Found</b>
        </div>
    }

    <br />
    @using (Html.BeginForm("AddCustomer", "Site", FormMethod.Post, new { @class = "ds-form" }))
    {
        <div class="ds-form-wrap">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary()
            <div class="ds-form-group">
                @Html.LabelFor(m => m.Name)
                @Html.TextBoxFor(m => m.Name)
            </div>
            <div class="ds-form-group">
                @Html.LabelFor(m => m.Type)
                @Html.DropDownListFor(m => m.Type, Model.Types)
            </div>
            <div class="ds-form-group">
                <button id="submit2" type="submit"><span class="glyphicon glyphicon-plus"></span> Add Customer</button>
            </div>
        </div>
    }

</div>
